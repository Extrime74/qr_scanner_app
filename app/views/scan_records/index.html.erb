<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  <h1 class="text-2xl font-bold text-gray-800 mb-6">Список записей</h1>

  <%= link_to "Назад", root_path, class: "inline-block bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-4 rounded-xl shadow transition duration-300 mb-6" %>

  <!-- Таблица -->
  <div class="bg-white shadow-lg rounded-2xl border border-gray-200 overflow-hidden">
    <% if @scan_records.empty? %>
      <div class="p-4 text-center text-gray-600">
        Нет записей для отображения
      </div>
    <% else %>
      <div class="overflow-x-auto">
        <table class="w-full text-sm text-gray-800">
          <thead>
            <tr class="bg-gray-100 text-left">
              <th class="px-3 py-2 w-[7%] break-words">ID</th>
              <th class="px-3 py-2 w-[15%] break-words">Грузополучатель</th>
              <th class="px-3 py-2 w-[15%] break-words">АПЗГР</th>
              <th class="px-3 py-2 w-[10%] break-words">Короб</th>
              <th class="px-3 py-2 w-[10%] break-words">Артикул</th>
              <th class="px-3 py-2 w-[15%] break-words">Размер</th>
              <th class="px-3 py-2 w-[10%] text-center break-words">Количество</th>
              <th class="px-3 py-2 w-[10%] break-words"></th>
            </tr>
          </thead>
          <tbody>
            <% @scan_records.each do |record| %>
              <% parsed = record.parsed_qr_data %>
              <% sizes = parsed[:sizes_with_quantities] || [] %>

              <% if sizes.any? %>
                <% sizes.each_with_index do |entry, index| %>
                  <tr class="<%= index.even? ? 'bg-gray-50' : '' %> border-t">
                    <% if index == 0 %>
                      <td class="px-3 py-2 align-top break-words text-center" rowspan="<%= sizes.size %>"><%= record.qr_code_id %></td>
                      <td class="px-3 py-2 align-top text-center align-middle whitespace-pre-line" rowspan="<%= sizes.size %>"><%= parsed[:consignee] %></td>
                      <td class="px-3 py-2 align-top break-words" rowspan="<%= sizes.size %>"><%= parsed[:apzgr] %></td>
                      <td class="px-3 py-2 align-top break-words" rowspan="<%= sizes.size %>"><%= parsed[:box_number] %></td>
                      <td class="px-3 py-2 align-top break-words" rowspan="<%= sizes.size %>"><%= parsed[:article] %></td>
                    <% end %>
                    <td class="px-3 py-2 break-words align-top"><%= entry[:size] %></td>
                    <td class="px-3 py-2 break-words text-center align-top"><%= entry[:quantity] %></td>
                    <% if index == 0 %>
                      <td class="px-3 py-2 align-middle text-center" rowspan="<%= sizes.size %>">
                        <button type="button"
                          data-record-id="<%= record.id %>"
                          class="open-delete-modal inline-flex items-center justify-center bg-red-500 hover:bg-red-600 text-white p-2 rounded-full transition duration-300 hover:shadow-xl hover:scale-[1.1] transform"
                          title="Удалить запись">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M6 7h12m-1 0v10a2 2 0 01-2 2H9a2 2 0 01-2-2V7m3 0V5a1 1 0 011-1h2a1 1 0 011 1v2" />
                          </svg>
                        </button>
                        <%= form_with url: scan_record_path(record), method: :delete, html: { id: "delete-form-#{record.id}", style: "display:none" } do %>
                        <% end %>
                      </td>
                    <% end %>
                  </tr>
                <% end %>
              <% else %>
                <tr>
                  <td colspan="8" class="text-red-600 font-medium p-4">
                    Ошибка при парсинге QR-кода: <code class="bg-gray-100 px-2 py-1 rounded text-xs inline-block"><%= record.qr_code_text %></code>
                  </td>
                </tr>
              <% end %>
            <% end %>
          </tbody>
        </table>
      </div>
    <% end %>
  </div>
</div>

<!-- Модальное окно подтверждения -->
<div id="modal-overlay" class="fixed inset-0 bg-black opacity-0 pointer-events-none transition-opacity duration-120 ease-out flex items-center justify-center z-50">
  <div id="modal-window" class="bg-white rounded-xl shadow-xl max-w-sm w-full p-6 text-center space-y-4 transform scale-95 opacity-0 transition-all duration-120 ease-out">
    <h2 class="text-lg font-semibold text-gray-800">Удалить запись?</h2>
    <p class="text-sm text-gray-600">Вы уверены, что хотите удалить эту запись? Это действие необратимо.</p>
    <div class="flex justify-center gap-4 pt-2">
      <button id="modal-cancel" class="px-4 py-2 bg-gray-300 hover:bg-gray-400 text-gray-800 font-medium rounded-xl transition">Отмена</button>
      <button id="modal-confirm" class="px-4 py-2 bg-red-500 hover:bg-red-600 text-white font-medium rounded-xl transition">Удалить</button>
    </div>
  </div>
</div>

<script>
  document.addEventListener("turbo:load", () => {
    const modal = document.getElementById("modal-overlay");
    const modalWindow = document.getElementById("modal-window");
    const confirmBtn = document.getElementById("modal-confirm");
    const cancelBtn = document.getElementById("modal-cancel");

    // Если элементов нет на странице — выходим
    if (!modal || !modalWindow || !confirmBtn || !cancelBtn) return;

    let activeRecordId = null;

    function showModal() {
      // Убираем классы, скрывающие модалку
      modal.classList.remove("opacity-0");
      modal.classList.remove("pointer-events-none");

      // Добавляем затемнение фона
      modal.classList.add("bg-opacity-50");

      // Показываем модальное окно
      setTimeout(() => {
        modalWindow.classList.remove("opacity-0", "scale-95");
        modalWindow.classList.add("opacity-100", "scale-100");
      }, 10);
    }

    function hideModal() {
      // Скрываем модальное окно
      modalWindow.classList.remove("opacity-100", "scale-100");
      modalWindow.classList.add("opacity-0", "scale-95");

      // После анимации скрываем фон
      setTimeout(() => {
        modal.classList.add("opacity-0");
        modal.classList.remove("bg-opacity-50");
        modal.classList.add("pointer-events-none");
      }, 150);
    }

    document.querySelectorAll(".open-delete-modal").forEach(button => {
      button.addEventListener("click", () => {
        activeRecordId = button.dataset.recordId;
        showModal();
      });
    });

    cancelBtn.addEventListener("click", hideModal);
    confirmBtn.addEventListener("click", () => {
      if (activeRecordId) {
        const form = document.getElementById(`delete-form-${activeRecordId}`);
        if (form) form.submit();
        hideModal();
      }
    });

    modal.addEventListener("click", (e) => {
      if (e.target === modal) {
        hideModal();
      }
    });
  });
</script>


<style>
  /* Удаляем все !important и ненужные переопределения */
  #modal-overlay {
    background-color: rgba(0, 0, 0, 0.5);
  }

  #modal-window {
    transition: all 0.3s ease-out;
  }

  #modal-window.opacity-0 {
    opacity: 0;
    transform: scale(0.95);
  }

  #modal-window.opacity-100 {
    opacity: 1;
    transform: scale(1);
  }
</style>